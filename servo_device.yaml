esphome:
  name: office_blinds
  platform: ESP8266
  board: d1_mini

wifi:
  ssid: !secret wifi
  password: !secret wifi_pw
  fast_connect: on
  manual_ip:
    static_ip: !secret ip_s3
    gateway: !secret ip_gateway
    subnet: !secret ip_subnet

web_server:
  port: !secret web_port

debug: 
logger:
  level: debug

api:
  services:
    - service: control_servo
      variables:
        level: float
      then:
        - servo.write:
            id: blinds_tilt
            level: !lambda 'return level / 100.0;'
ota:

output:
  - platform: gpio
    id: 'obt_1'
    pin: D7
  - platform: gpio
    id: 'obt_2'
    pin: D8
  - platform: esp8266_pwm
    id: 'blinds_t'
    pin: D0
    frequency: 50 Hz

switch:
  - platform: output
    output: 'obt_1'
    id: obtilt1
  - platform: output
    output: 'obt_2'
    id: obtilt2

servo:
  - output: 'blinds_t'
    id: blinds_tilt

sensor:
  - platform: template
    name: "Office Blinds Position"
    id: blinds_pos

# binary_sensor:
#   - platform: gpio
#     pin: D3
#     name: "Office Blinds Button"
#     filters:
#       invert:
#     on_multi_click:
#     - timing:
#         - ON for at most 0.5s
#         - OFF for at most 0.5s
#         - ON for at most 0.5s
#         - OFF for at most 0.5s
#       then:
#         - lambda: |
#             if (id(blinds_tilt_control).state == cover::COVER_OPEN) {
#               id(blinds_tilt_control).close();
#             } else {
#               id(blinds_tilt_control).open();
#             }
 
cover:
  - platform: template
    name: "Office Blinds Tilt"
    id: blinds_tilt_control
    optimistic: true
    open_action:
      - switch.turn_off: obtilt2
      - switch.turn_on: obtilt1
      - delay: 500ms
      - servo.write:
          id: blinds_tilt
          level: -2.0%
      - sensor.template.publish:
          id: blinds_pos
          state: 50
      - delay: 5s
      - switch.turn_off: obtilt1
    close_action:
      - switch.turn_off: obtilt2
      - switch.turn_on: obtilt1
      - delay: 500ms
      - servo.write:
          id: blinds_tilt
          level: -100.0%
      - sensor.template.publish:
          id: blinds_pos
          state: 0
      - delay: 5s
      - switch.turn_off: obtilt1
    stop_action:
      - switch.turn_off: obtilt2
      - switch.turn_on: obtilt1
      - delay: 500ms
      - servo.write:
          id: blinds_tilt
          level: 100.0%
      - sensor.template.publish:
          id: blinds_pos
          state: 100
      - delay: 5s
      - switch.turn_off: obtilt1